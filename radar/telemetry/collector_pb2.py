# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: telemetry/collector.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import extensions_pb2 as extensions__pb2
from system import status_pb2 as system_dot_status__pb2
from system import ack_pb2 as system_dot_ack__pb2
from telemetry import report_pb2 as telemetry_dot_report__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='telemetry/collector.proto',
  package='telemetry',
  syntax='proto3',
  serialized_options=_b('Z-github.com/airmap/interfaces/src/go/telemetry'),
  serialized_pb=_b('\n\x19telemetry/collector.proto\x12\ttelemetry\x1a\x10\x65xtensions.proto\x1a\x13system/status.proto\x1a\x10system/ack.proto\x1a\x16telemetry/report.proto\"\xc1\x01\n\x06Update\x1a`\n\x0c\x46romProvider\x12 \n\x06status\x18\x01 \x01(\x0b\x32\x0e.system.StatusH\x00\x12#\n\x06report\x18\x02 \x01(\x0b\x32\x11.telemetry.ReportH\x00\x42\t\n\x07\x64\x65tails\x1aU\n\nToProvider\x12 \n\x06status\x18\x01 \x01(\x0b\x32\x0e.system.StatusH\x00\x12\x1a\n\x03\x61\x63k\x18\x02 \x01(\x0b\x32\x0b.system.AckH\x00\x42\t\n\x07\x64\x65tails2`\n\tCollector\x12S\n\x0f\x43onnectProvider\x12\x1e.telemetry.Update.FromProvider\x1a\x1c.telemetry.Update.ToProvider(\x01\x30\x01\x42/Z-github.com/airmap/interfaces/src/go/telemetryb\x06proto3')
  ,
  dependencies=[extensions__pb2.DESCRIPTOR,system_dot_status__pb2.DESCRIPTOR,system_dot_ack__pb2.DESCRIPTOR,telemetry_dot_report__pb2.DESCRIPTOR,])




_UPDATE_FROMPROVIDER = _descriptor.Descriptor(
  name='FromProvider',
  full_name='telemetry.Update.FromProvider',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='telemetry.Update.FromProvider.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='report', full_name='telemetry.Update.FromProvider.report', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='details', full_name='telemetry.Update.FromProvider.details',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=132,
  serialized_end=228,
)

_UPDATE_TOPROVIDER = _descriptor.Descriptor(
  name='ToProvider',
  full_name='telemetry.Update.ToProvider',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='telemetry.Update.ToProvider.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ack', full_name='telemetry.Update.ToProvider.ack', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='details', full_name='telemetry.Update.ToProvider.details',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=230,
  serialized_end=315,
)

_UPDATE = _descriptor.Descriptor(
  name='Update',
  full_name='telemetry.Update',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_UPDATE_FROMPROVIDER, _UPDATE_TOPROVIDER, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=122,
  serialized_end=315,
)

_UPDATE_FROMPROVIDER.fields_by_name['status'].message_type = system_dot_status__pb2._STATUS
_UPDATE_FROMPROVIDER.fields_by_name['report'].message_type = telemetry_dot_report__pb2._REPORT
_UPDATE_FROMPROVIDER.containing_type = _UPDATE
_UPDATE_FROMPROVIDER.oneofs_by_name['details'].fields.append(
  _UPDATE_FROMPROVIDER.fields_by_name['status'])
_UPDATE_FROMPROVIDER.fields_by_name['status'].containing_oneof = _UPDATE_FROMPROVIDER.oneofs_by_name['details']
_UPDATE_FROMPROVIDER.oneofs_by_name['details'].fields.append(
  _UPDATE_FROMPROVIDER.fields_by_name['report'])
_UPDATE_FROMPROVIDER.fields_by_name['report'].containing_oneof = _UPDATE_FROMPROVIDER.oneofs_by_name['details']
_UPDATE_TOPROVIDER.fields_by_name['status'].message_type = system_dot_status__pb2._STATUS
_UPDATE_TOPROVIDER.fields_by_name['ack'].message_type = system_dot_ack__pb2._ACK
_UPDATE_TOPROVIDER.containing_type = _UPDATE
_UPDATE_TOPROVIDER.oneofs_by_name['details'].fields.append(
  _UPDATE_TOPROVIDER.fields_by_name['status'])
_UPDATE_TOPROVIDER.fields_by_name['status'].containing_oneof = _UPDATE_TOPROVIDER.oneofs_by_name['details']
_UPDATE_TOPROVIDER.oneofs_by_name['details'].fields.append(
  _UPDATE_TOPROVIDER.fields_by_name['ack'])
_UPDATE_TOPROVIDER.fields_by_name['ack'].containing_oneof = _UPDATE_TOPROVIDER.oneofs_by_name['details']
DESCRIPTOR.message_types_by_name['Update'] = _UPDATE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Update = _reflection.GeneratedProtocolMessageType('Update', (_message.Message,), dict(

  FromProvider = _reflection.GeneratedProtocolMessageType('FromProvider', (_message.Message,), dict(
    DESCRIPTOR = _UPDATE_FROMPROVIDER,
    __module__ = 'telemetry.collector_pb2'
    # @@protoc_insertion_point(class_scope:telemetry.Update.FromProvider)
    ))
  ,

  ToProvider = _reflection.GeneratedProtocolMessageType('ToProvider', (_message.Message,), dict(
    DESCRIPTOR = _UPDATE_TOPROVIDER,
    __module__ = 'telemetry.collector_pb2'
    # @@protoc_insertion_point(class_scope:telemetry.Update.ToProvider)
    ))
  ,
  DESCRIPTOR = _UPDATE,
  __module__ = 'telemetry.collector_pb2'
  # @@protoc_insertion_point(class_scope:telemetry.Update)
  ))
_sym_db.RegisterMessage(Update)
_sym_db.RegisterMessage(Update.FromProvider)
_sym_db.RegisterMessage(Update.ToProvider)


DESCRIPTOR._options = None

_COLLECTOR = _descriptor.ServiceDescriptor(
  name='Collector',
  full_name='telemetry.Collector',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=317,
  serialized_end=413,
  methods=[
  _descriptor.MethodDescriptor(
    name='ConnectProvider',
    full_name='telemetry.Collector.ConnectProvider',
    index=0,
    containing_service=None,
    input_type=_UPDATE_FROMPROVIDER,
    output_type=_UPDATE_TOPROVIDER,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_COLLECTOR)

DESCRIPTOR.services_by_name['Collector'] = _COLLECTOR

# @@protoc_insertion_point(module_scope)
